{"version":3,"sources":["components/App.js","components/Login.js","components/Nav.js","components/RestaurantInfo.js","components/MessageList.js","components/Home.js","components/Signup.js","components/ConfirmOrder.js","components/Footer.js","components/MyOrders.js","Routes.js","index.js"],"names":["Component","SERVER_URL","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleEmail","e","preventDefault","setState","email","target","value","_handlePassword","password","_handleSubmit","fetch","method","body","JSON","stringify","state","headers","Content-Type","then","res","json","console","log","success","window","localStorage","setItem","token","username","userid","SignInError","message","history","push","location","reload","catch","error","undefined","signUpError","IsLoading","bind","assertThisInitialized","_this2","getItem","_this3","react_default","a","createElement","className","row","id","onSubmit","class","type","name","placeholder","ref","node","inputNode1","onChange","inputNode2","href","Nav","user","concat","clear","hash","Link","to","style","width","height","src","onClick","signout","dishCategory","RestaurantInfo","restaurant","order","total","deliverycharges","params","match","resArray","stateArray","$","each","key","key1","value1","map","Dishes","item","filter","index","self","indexOf","dish","dishid","_id","cost","title","toConsumableArray","dishArray","dishCost","j","length","order_no","Math","random","toString","slice","toUpperCase","round","userId","restaurant_id","dishId","deliverycost","deliveryaddress","resdishId","rescost","dishes","some","t","String","i","Number","description","Address","city","addToCart","image","alt","confirmOrder","Dummy_DATA","text","sender","audioplay","Home","trackScrolling","$win","scrollTop","slideToggle","toggle","get","pause","document","play","addEventListener","allow","Signup","firstname","lastname","inputNode3","inputNode4","ConfirmOrder","Footer","orderList","orderarray","stateOrder","statedishes","orderid","key2","value2","list","Routes","HashRouter","components_Nav","Route","exact","path","component","MyOrders","Footer_Footer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9b54c707.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport {browserHistory} from 'react-router';\n// import jwtDecode from 'jwt-decode';\n// import './Login.css'\nconst SERVER_URL = \"https://foodserverapp.herokuapp.com/api/\";\n\n// const SERVER_URL = \"http://localhost:5000/api/\";\n\nclass Login extends Component{\n  constructor(props){\n    super(props);\n    this.state = {username: undefined, email: undefined,password:undefined, signUpError:'',SignInError:'',IsLoading:true}\n    this._handleSubmit = this._handleSubmit.bind(this);\n    // browserHistory.push('/home');\n  }\n  componentDidMount () {\n  const token = window.localStorage.getItem('jwt');\n  const username = window.localStorage.getItem('username');\n  const email = window.localStorage.getItem('email');\n  // console.log($(window).height() - $(document).height());\n\n  let nv;\n  if (token !== \"undefined\") {\n    // nv = jwtDecode(token);\n    fetch(SERVER_URL+\"verify?token=\"+token)\n    .then(res => res.json)\n    .then(json => {\n      if(json.success)\n      {\n        this.setState({\n          token,\n          username:username,\n          SignInError:json.message\n        });\n      }\n      else{\n        this.setState({\n          token,\n          IsLoading:false,\n          SignInError:json.message\n        });\n      }\n    })\n  }\n  // else{\n  //\n  // }\n  // if (nv) {\n  //\n  //   this.setState({user: `Welcome  ${nv.username}`})\n  // //  this.setState({isSignedIn: !!window.localStorage.getItem('jwt')});\n  //  }\n\n }\n _handleEmail = (e) => {\n   e.preventDefault();\n   this.setState({email: e.target.value});\n }\n _handlePassword = (e) => {\n   e.preventDefault();\n   this.setState({password: e.target.value});\n }\n  _handleSubmit = (e) => {\n    e.preventDefault()\n    // console.log(this.inputNode1.value);\n    // console.log(this.inputNode2.value);\n    // var formData = new FormData();\n    // formData.append(\"email\",this.inputNode1.value);\n    // formData.append(\"password\",this.inputNode2.value);\n    // console.log(formData);\n    fetch(SERVER_URL+\"login\",\n         { method: 'POST',\n         body: JSON.stringify({\n           email:this.state.email,\n           password:this.state.password\n         }),\n         headers: {\"Content-Type\" : \"application/json\"}\n       }).then(res => res.json()).then(res => {\n                 console.log(res);\n                //  const { user } = res.user;\n                //  const{\n                //   username,\n                //   email,\n                //   userid\n                // } = user;\n                //(\n\n\n               // console.log(username);\n               if(res.success){\n                 window.localStorage.setItem('jwt', res.token);\n                 window.localStorage.setItem('username', res.username);\n                 window.localStorage.setItem('email', res.email);//)\n                 window.localStorage.setItem('userid', res.userid);//)\n               }\n               else\n               {\n                 this.setState({\n                   SignInError:res.message\n                 });\n               }\n            }\n\n         // ).then(() => browserHistory.push('/home'))\n       ).then(() => this.props.history.push('/home')\n     ).then(() => window.location.reload())\n\n        .catch(function(error) {\n  console.log('There has been a problem with your fetch operation: ', error.message);\n});\n// console.log(this.props.history);\n\n// let nv = jwtDecode(window.localStorage.getItem('jwt'));\n//   this.setState({username: nv.username});\n//     const {currentTarget} = event;\n//   const formData = new FormData(currentTarget);\n//   onSubmit({\n//     email: formData.get('email'),\n//     password: formData.get('password')\n//   });\n }\n  render(){\n    return(\n      <div className=\"container\">\n        <div row=\"row\">\n        <div className=\"col-md-4 offset-md-4\">\n        <div id=\"formContent\">\n\n          <form onSubmit={this._handleSubmit}>\n          <div class=\"form-group\">\n              Email\n              <input type=\"text\" id=\"login\" className=\"form-control txt\" name=\"login\" placeholder=\"login\" ref={node => {this.inputNode1 = node}} onChange={this._handleEmail.bind(this)}/>\n            </div>\n            <div class=\"form-group\">\n              Password\n              <input type=\"password\" id=\"password\" className=\"form-control txt\" name=\"login\" placeholder=\"password\" ref={node => {this.inputNode2 = node}} onChange={this._handlePassword.bind(this)}/>\n            </div>\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Log In\" />\n            <p>{this.state.message}</p>\n          </form>\n\n          <div id=\"formFooter\">\n            <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\n          </div>\n\n        </div>\n        </div>\n\n        </div>\n\n      </div>\n\n    );\n  }\n}\nexport default Login;\n","import React, { Component } from 'react';\n// import {browserHistory} from 'react-router';\n// import {browserHistory} from 'react-router';\n// import $ from 'jquery';\nimport { Link } from 'react-router-dom';\nimport Login from './Login';\n// import jwtDecode from 'jwt-decode';\n// import './Nav.css'\nconst SERVER_URL = \"https://foodserverapp.herokuapp.com/api/\";\n// const SERVER_URL = \"http://localhost:5000/api/\";\n\nclass Nav extends Component{\n  constructor(){\n    super();\n    this.state = {\n      username: undefined,\n      user: undefined\n    };\n    // $('#myModal').on('shown.bs.modal', function () {\n    //    $('#myInput').trigger('focus')\n    //  })\n    // this.updateCity = this.updateCity.bind(this);\n  }\n  componentDidMount () {\n    // alert('1');\n  const token = window.localStorage.getItem('jwt');\n  const username = window.localStorage.getItem('username');\n  const email = window.localStorage.getItem('email');\n  const userid = window.localStorage.getItem('userid');\n\n  // let nv;\n  if (token !== \"undefined\") {\n    // nv = jwtDecode(token);\n    // alert('2');\n    fetch(SERVER_URL+\"verify?token=\"+token)\n    .then(res => res.json())\n    .then(json => {\n      if(json.success)\n      {\n        this.setState({\n          token,\n          username:username,\n          user: `Welcome ,${username}`\n        });\n      }\n      else{\n        this.setState({\n          token,\n          IsLoading:false\n        });\n      }\n    })\n  }\n  // else{\n  //\n  // }\n  // if (nv) {\n  //\n  //   this.setState({user: `Welcome  ${nv.username}`})\n  // //  this.setState({isSignedIn: !!window.localStorage.getItem('jwt')});\n  //  }\n\n }\n  signout(){\n    // alert('signout');\n    const token = window.localStorage.getItem('jwt');\n\n    if (token !== \"undefined\") {\n      // nv = jwtDecode(token);\n      // alert('2');\n      fetch(SERVER_URL+\"logout?token=\"+token)\n      .then(res => res.json())\n      .then(json => {\n        if(json.success)\n        {\n          // this.setState({\n          //   username:undefined,\n          //   user: undefined\n          // });\n          localStorage.clear();\n          window.location.hash = 'home';\n          window.location.reload();\n        }\n\n      })\n    }\n\n    // this.props.history.push('/home');\n  }\n  // updateCity(city){\n  //   this.setState({city:city});\n  //\n  //   // alert(this.state.city);\n  // }\n  render(){\n    return(\n\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-dark navbarbg\">\n      <Link to='/home' className=\"logo\">Foodie</Link>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav mr-auto\">\n\n            {this.state.user ?\n              <li className=\"nav-item active link mL10\">\n                <Link to='/myorders' className=\"navbar-brand nav-margin alinkwhite\">My Orders</Link>\n              </li>\n              : null}\n          </ul>\n          <span className=\"navbar-text\">\n            <img style={{width: '30px', height: '30px'}} src=\"images/user.png\" />\n            {this.state.user ? this.state.user + '|' : null}\n\n            {this.state.user ?\n              <a href=\"#\" onClick={this.signout} className=\"navbar-brand link nav-margin pL10 pR10 alinkwhite\">Logout</a>\n              :\n              <Link to='/login' className=\"navbar-brand link nav-margin pL10 pR10 alinkwhite\">Login</Link>}\n\n          </span>\n          <Link to='/signup' className=\"navbar-brand link nav-margin pL10 pR10 alinkwhite\">SignUp</Link>\n        </div>\n\n        </nav>\n\n    );\n  }\n}\nexport default Nav;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport $ from 'jquery';\nimport axios from 'axios';\nlet dishCategory = [];\nconst userid = window.localStorage.getItem('userid');\nconst SERVER_URL = \"https://foodserverapp.herokuapp.com/api/\";\n// const SERVER_URL = \"http://localhost:5000/api/\";\n\nexport default class RestaurantInfo extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      restaurant:[],\n      dishCategory:[],\n      order:[],\n      total:0,\n      deliverycharges:5,\n      params:[],\n      message:'',\n      success:false\n    }\n    var resArray = [this.props.match.params.restaurant];\n    const fetchRestaurantDetails = () => {\n      // alert('1');\n      fetch(SERVER_URL+\"restaurant?id=\"+this.props.match.params.restaurant)\n      .then(res => res.json())\n      .then(res =>\n                  {\n                    // console.log(res);\n                    // debugger;\n                    // console.log(this.state.restaurant[0]['5c79fa35a040bec87734ac8f']._id);\n                    var resArray = [res];\n                    var stateArray = [];\n                    // this.setState({ restaurant: [...res] });\n\n                    $.each(resArray,(key,value) => {\n\n                      $.each(value,(key1,value1) => {\n\n                        stateArray.push(value1);\n                      });\n                    });\n                    this.setState({ restaurant: [...stateArray] });\n                    // console.log(stateArray);\n                    // console.log(this.state.restaurant);\n                      this.state.restaurant.map( (restaurant) =>\n                        {\n                          dishCategory = restaurant.Dishes.map(item => item.type)\n                          .filter((value, index, self) => self.indexOf(value) === index)\n                        }\n\n                      );\n                      this.setState({dishCategory:dishCategory});\n                      // console.log(dishCategory);\n                      // dishCategory.map((type) =>(\n                      //   console.log(type)\n                      // ))\n                      // const dishCategory = res.Dishes.map(item => item.type)\n                      // .filter((value, index, self) => self.indexOf(value) === index)\n//.filter(item => item.type === type)\n\n                 });\n                 // });\n    };\n    fetchRestaurantDetails();\n    console.log(this.state.restaurant[0])\n\n\n    // console.log([...resArray]);\n  }\n  componentDidMount () {\n    // alert('1');\n  // const token = window.localStorage.getItem('jwt');\n  // const username = window.localStorage.getItem('username');\n  // const email = window.localStorage.getItem('email');\n\n  // let nv;\n  // if (token !== \"undefined\") {\n  //   // nv = jwtDecode(token);\n  //   // alert('2');\n  //   fetch(\"http://localhost:5000/api/verify?token=\"+token)\n  //   .then(res => res.json())\n  //   .then(json => {\n  //     if(json.success)\n  //     {\n  //       this.setState({\n  //         token,\n  //         username:username,\n  //         user: `Welcome ,${username}`\n  //       });\n  //     }\n  //     else{\n  //       this.setState({\n  //         token,\n  //         IsLoading:false\n  //       });\n  //     }\n  //   })\n  // }\n}\n\n  addToCart(dish){\n    // alert('1');\n    // e.preventDefault();\n    console.log(this.state.order.dishid);\n    let order = {\n      userid:userid,\n      dishid:dish._id,\n      cost:dish.cost,\n      title:dish.title\n    }\n    // toQueryString(order, \"prefix\");\n    this.setState({order:[...this.state.order, order]});\n    this.setState({total: this.state.total+dish.cost});\n    // this.setState({params:toQueryString(this.state.order)});\n\n    console.log(this.state.order);\n    // console.log(this.state.params);\n\n  }\n  confirmOrder(){\n    // let axiosArray = [];\n    // alert(this.state.order[j].dishId);\n    let dishArray = [];\n    let dishCost = [];\n\n    // let postData = {}\n    // postData['order_no'] = Math.random().toString(36).slice(2).toUpperCase() + Math.round(Math.random(1000) * 10000);\n    // postData['userId'] = userid;\n    // postData['deliverycost'] = this.state.deliverycost;\n    // postData['deliveryaddress'] = this.inputNode1.value;\n    for (let j=0;j<=this.state.order.length-1;j++) {\n      // var dish = {\n      //   \"dishes\" : this.state.order[j].cost\n      // };\n      dishArray[j] = this.state.order[j].dishid;\n      dishCost[j] = this.state.order[j].cost;\n      // postData['cost'] = this.state.order[j].cost;\n    }\n    fetch(SERVER_URL+\"order\",\n         { method: 'POST',\n         body: JSON.stringify({\n           order_no:Math.random().toString(36).slice(2).toUpperCase() + Math.round(Math.random(1000) * 10000),\n           userId:userid,\n           restaurant_id:this.props.match.params.restaurant,\n           dishId:dishArray,\n           cost:dishCost,\n           deliverycost:this.state.deliverycharges,\n           deliveryaddress:this.inputNode1.value,\n         }),\n         headers: {\"Content-Type\" : \"application/json\"}\n       }).then(res => res.json()).then(res => {\n               if(res.success)\n               {\n                 console.log(res);\n                 this.setState({success: true});\n                 // this.setState({order: res.order});\n                 var order = [res.order];\n                 var resdishId = [];\n                 var rescost = [];\n                 var order_no = \"\";\n                 var deliverycost = 0;\n                 var deliveryaddress = \"\";\n\n                 $.each(order,(key,value) => {\n\n                   $.each(value,(key1,value1) => {\n                   //\n                   order_no = value1.order_no;\n                   deliverycost = value1.deliverycost;\n                   deliveryaddress = value1.deliveryaddress;\n\n                    rescost = [value1.cost];\n                    resdishId = [value1.dishId];\n\n                   //   // stateArray.push(value1);\n                   });\n                 });\n                 this.setState({message: \"Order placed Succesfully.Your order# is \"+order_no});\n\n                 console.log(resdishId);\n\n                var dishes = [];\n                this.state.restaurant.map( (restaurant) =>\n                  {\n\n                    dishes = restaurant.Dishes.filter(function(restaurant) {\n                     return resdishId.some(function(t){\n                       // console.log(t);\n                       // console.log(restaurant._id);\n\n                       return String(restaurant._id) === String(t);\n                     });\n                   });\n\n                  });\n                  console.log(dishes);\n                  var dishArray = [];\n                  var total = 0;\n\n                  for(let i=0;i<=dishes.length-1;i++){\n                    total = total + Number(rescost[i]);\n\n                    var dish = {\n                      _id:dishes[i]._id,\n                      title:dishes[i].title,\n                      cost:rescost[i]\n                    };\n\n                    dishArray.push(dish);\n                  }\n                  this.setState({order:[...dishArray]});\n                  this.setState({deliverycharges:deliverycost});\n                  this.setState({deliveryaddress:deliveryaddress});\n                  this.setState({total: total});\n\n                 console.log(total);\n               }\n\n               });\n    // let newPromise = axios({\n    //     method: 'post',\n    //     url: \"http://localhost:5000/api/order\",\n    //     data: postData,\n    //     headers: {\"Content-Type\" : \"application/json\"}\n    //   })\n    // axiosArray.push(newPromise)\n    // // console.log(axiosArray);\n    // axios\n    // .all(axiosArray)\n    // .then(() => {\n    //   this.setState({message: \"Order placed Succesfully.\"})\n    // // console.log('submitted all axios calls')\n    // }).catch(error => {this.setState({message: error.message})})\n\n  }\n  render(){\n    return(\n      <div className=\"content-wrap\">\n      <div className=\"container\">{ this.state.restaurant.map( (restaurant) => (\n          <div className=\"row mT10 mB10\">\n            <div key={restaurant._id + 'moviediv'} className=\"row d-inline-block col-md-8\">\n                 <h1>{restaurant.name}</h1>\n                 <div className=\"restaurantdiv\">\n                 <p className=\"ptag\">{restaurant.description}</p>\n                 <p className=\"ptag\">{restaurant.Address + restaurant.city}</p>\n                 </div>\n\n                 {this.state.dishCategory.map((type) =>(\n                   <div className=\"dishesdiv mB10\" key ={type}>\n                    <h3>{type}</h3>\n                    {\n                      restaurant.Dishes.filter(item => item.type === type).map((dish) => (\n                        <div className=\"row md-offset-1\">\n                          <div key={dish._id} className=\"col-md-8\">\n                             <h5>{dish.title}</h5>\n                             <p>{dish.description}</p>\n                             <p>{dish.cost + '$'}</p>\n                          </div>\n                          <div key={dish._id} className=\"col-md-2\">\n\n                          <button className=\"btn btn-primary\" onClick={() => this.addToCart(dish)}>Add</button>\n                          </div>\n                        </div>\n                      ))\n                    }\n                  </div>\n\n                 ))}\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"row\">\n                { this.state.restaurant.map( (restaurant) => (<div key={restaurant._id}>\n                   <img src={ restaurant.image} alt={restaurant.name} className=\"movieimg\" key={'img' + restaurant._id}/>\n                </div>))}\n              </div>\n            {\n              (this.state.order.length > 0) ?\n\n              <div>\n                <h3>Order Details</h3>\n                <table>\n                <tr>\n                <th>List</th>\n                <th>Cost</th>\n                </tr>\n\n                {this.state.order.map( (order) => (\n\n                    <tr>\n                    <td>{order.title}</td>\n                    <td>{order.cost + '$'}</td>\n                    </tr>\n                ))}\n                <tr>\n                <td>Delivery Charges</td>\n                <td>{this.state.deliverycharges + '$'}</td>\n                </tr>\n                <tr>\n                <td>Total</td>\n                <td>{(this.state.total + Number(this.state.deliverycharges)) + '$'}</td>\n                </tr>\n                </table>\n                  <form onSubmit={this.confirmOrder.bind(this)}>\n                  <label>Enter Delivery Address</label>\n                  {this.state.success === true ? <p>{this.state.deliveryaddress}</p> :\n                  <input type=\"textarea\" placeholder=\"Address\" className=\"form-control txtarea\" ref={node => {this.inputNode1 = node}}/>\n                   }\n                  {this.state.success === false ? <button className=\"btn btn-primary mT10\">Confirm</button> : null }\n                  <p>{this.state.message}</p>\n                  </form>\n                </div>\n              :\n\n              null\n\n              }\n\n\n\n            </div>\n          </div>\n     ))}</div>\n     </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nconst Dummy_DATA = [\n  {\n    text: \"Hello\",\n    sender: \"Jeol\"\n  },\n  {\n    text: \"How may I help you?\",\n    sender: \"Jeol\"\n  },\n  {\n    text: \"Have a nice day.\",\n    sender: \"Jeol\"\n  }\n];\nexport default class MessageList extends Component{\n  constructor(){\n    super();\n    this.state = {\n      sender: Math.random().toString(36).slice(2).toUpperCase() + Math.random(1000) * 1000,\n      message: \"\"\n    }\n  }\n  _handleSubmit(msg){\n    var data = {\n      text: msg,\n      sender: this.state.sender\n    }\n    Dummy_DATA.push(data);\n    console.log(Dummy_DATA);\n  }\n  _handleChange(e){\n    this.setState({message: e.target.value});\n  }\n  render(){\n    return(\n      <div className=\"shadows\">\n      {Dummy_DATA.map((message) => {\n        return(\n              <div className=\"\">\n                <h5>{message.sender}</h5>\n                <p>{message.text}</p>\n              </div>\n            );\n      })}\n      <form onSubmit={() => this._handleSubmit(this.state.message)}>\n        <input type=\"text\" placeholder=\"Type your message here\" onChange={this._handleChange.bind(this)}/>\n      </form>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport $ from 'jquery';\nimport RestaurantInfo from './RestaurantInfo';\nimport MessageList from './MessageList';\nconst SERVER_URL = \"https://foodserverapp.herokuapp.com/api/\";\n\n// const SERVER_URL = \"http://localhost:5000/api/\";\nlet audioplay = false;\nexport default class Home extends Component{\n  constructor(){\n    super();\n    this.state = {\n      restaurant:[],\n      toggle:\"expand\"\n    };\n\n    const fetchRestaurants = () => {\n      // alert('1');\n      fetch(SERVER_URL+\"restaurants\")\n      .then(res => res.json())\n      .then(res =>\n                  {\n                    // console.log(res);\n                    // debugger;\n                    // console.log(this.state.restaurant[0]['5c79fa35a040bec87734ac8f']._id);\n                    var resArray = [res];\n                    var stateArray = [];\n                    // for (var i = 0; i < carsArray.length; i++){\n                    //     var car = carsArray[i];\n                    //     console.log(car)\n                    // }\n                    $.each(resArray,(key,value) => {\n                      // console.log(key);\n                      $.each(value,(key1,value1) => {\n                        stateArray.push(value1);\n                      });\n                    });\n                    this.setState({ restaurant: [...stateArray] });\n                    // this.setState({ restaurant: [res] });\n\n                    // console.log(stateArray);\n                 });\n    };\n    fetchRestaurants();\n    // console.log(this.state.restaurant);\n    // this.toggle = this.toggle.bind(this);\n  }\n  componentDidMount(){\n    $('.innerdiv').slideToggle('slow');\n    document.addEventListener('scroll', this.trackScrolling);\n    // $(function () {\n    //\n    //      });\n  }\n  // componentWillUnmount() {\n  // document.removeEventListener('scroll', this.trackScrolling);\n  // }\n  trackScrolling = () => {\n    var $win = $(window);\n\n    // $win.scroll(function () {\n        if ($win.scrollTop() == 0){\n          $('.innerdiv').slideToggle('slow');\n          this.setState({toggle:this.state.toggle === \"expand\" ? \"collapse\" : \"expand\"});\n          // if(audioplay)\n          // $('#myAudio').get(0).pause();\n          if(audioplay)\n          {\n            $('#myAudio').get(0).pause();\n            audioplay = false;\n          }\n\n        }\n        else if ($win.height() + $win.scrollTop() == $(document).height()) {\n           $('.innerdiv').slideToggle('slow');\n           this.setState({toggle:this.state.toggle === \"expand\" ? \"collapse\" : \"expand\"});\n           $('#myAudio').get(0).play();\n           audioplay = true;\n        }\n        // else{\n        //   if(play)\n        //   $('#myAudio').get(0).pause();\n        //\n        // }\n    // });\n  }\n  toggle(){\n        $('.innerdiv').slideToggle('slow');\n        this.setState({toggle:this.state.toggle === \"expand\" ? \"collapse\" : \"expand\"});\n  }\n  render(){\n    return(\n      <div className=\"content-wrap\">\n      <div className=\"banner\">\n        <div className=\"overlay\">\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n        <img src=\"images/weekhot.png\" alt=\"weekhot\" key=\"imgweekhot\" id=\"imgweekhot\"/>\n\n        </div>\n        <div className=\"row\">\n\n        <div className=\"offset-md-1\">\n           { this.state.restaurant.map( (restaurant) => (\n\n           <div key={restaurant._id + 'moviediv'} className=\"row d-inline-block\">\n           <div className=\"col-md-4\">\n           <Link to={\"/restaurantinfo/\"+restaurant._id.toString() } className=\"btn btn-light\">\n           <div key={restaurant._id} className=\"moviediv\" >\n            <img src={ restaurant.image} alt={restaurant.name} className=\"movieimg\" key={'img' + restaurant._id}/>\n            <h5>{restaurant.name}</h5>\n            </div>\n            </Link>\n            </div>\n            </div>\n          ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"screen\">\n          <audio id=\"myAudio\" >\n              <source src=\"images/Pling-KevanGC-1485374730.mp3\" type=\"audio/mpeg\" />\n          </audio>\n          <button className=\"screen botclose\" onClick={this.toggle.bind(this)}>\n            <img src=\"images/chatbot1.png\" alt=\"bot\" width=\"60\" height=\"60\"/>\n          </button>\n       <div className=\"innerdiv\">\n          <iframe\n              allow=\"microphone;\"\n              width=\"350\"\n              height=\"430\"\n              src=\"https://console.dialogflow.com/api-client/demo/embedded/18e5fe74-c8b1-455c-b697-e3be6743a7ca\">\n          </iframe>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {browserHistory} from 'react-router';\n// import jwtDecode from 'jwt-decode';\n// import './Login.css'\nconst SERVER_URL = \"https://foodserverapp.herokuapp.com/api/\";\n// const SERVER_URL = \"http://localhost:5000/api/\";\n\nclass Signup extends Component{\n  constructor(props){\n    super(props);\n    this.state = {username: undefined, email: undefined,password:undefined, signUpError:'',SignInError:'',IsLoading:true}\n    this._handleSubmit = this._handleSubmit.bind(this);\n    // browserHistory.push('/home');\n  }\n  componentDidMount () {\n  const token = window.localStorage.getItem('jwt');\n  let nv;\n  if (token !== \"undefined\") {\n    // nv = jwtDecode(token);\n    fetch(SERVER_URL+\"verify?token=\"+token)\n    .then(res => res.json)\n    .then(json => {\n      if(json.success)\n      {\n        this.setState({\n          token,\n          IsLoading:false\n        });\n      }\n      else{\n        this.setState({\n          token,\n          IsLoading:false\n        });\n      }\n    })\n  }\n  else{\n\n  }\n  if (nv) {\n\n    this.setState({user: `Welcome  ${nv.username}`})\n  //  this.setState({isSignedIn: !!window.localStorage.getItem('jwt')});\n   }\n\n }\n // _handleEmail = (e) => {\n //   e.preventDefault();\n //   this.setState({email: e.target.value});\n // }\n // _handlePassword = (e) => {\n //   e.preventDefault();\n //   this.setState({password: e.target.value});\n // }\n  _handleSubmit = (e) => {\n    e.preventDefault()\n    // console.log(this.inputNode1.value);\n    // console.log(this.inputNode2.value);\n    // var formData = new FormData();\n    // formData.append(\"email\",this.inputNode1.value);\n    // formData.append(\"password\",this.inputNode2.value);\n    // console.log(formData);\n    fetch(SERVER_URL+\"user\",\n         { method: 'POST',\n         body: JSON.stringify({\n           firstname:this.inputNode1.value,\n           lastname:this.inputNode2.value,\n           email:this.inputNode3.value,\n           password:this.inputNode4.value\n         }),\n         headers: {\"Content-Type\" : \"application/json\"}\n       }).then(res => res.json())\n       .then(res => {\n         if(res.success){\n           console.log('signed up');\n           fetch(SERVER_URL+\"login\",\n                { method: 'POST',\n                body: JSON.stringify({\n                  email:this.inputNode3.value,\n                  password:this.inputNode4.value\n                }),\n                headers: {\"Content-Type\" : \"application/json\"}\n              }).then(res => res.json()).then(res => (console.log(res),\n                  this.setState({username: this.inputNode1.value}),\n                  window.localStorage.setItem('jwt', res.token))\n                // ).then(() => browserHistory.push('/home'))\n              )\n         }\n       })\n       // ,\n       //     this.setState({username: this.inputNode1.value}),\n       //     window.localStorage.setItem('jwt', res.token))\n       //   // ).then(() => browserHistory.push('/home'))\n       // )//.then(() => this.props.history.push('/home')\n     //)//.then(() => window.location.reload())\n\n       // )\n         .catch(function(error) {\n  console.log('There has been a problem with your fetch operation: ', error.message);\n});\n// console.log(this.props.history);\n\n// let nv = jwtDecode(window.localStorage.getItem('jwt'));\n//   this.setState({username: nv.username});\n//     const {currentTarget} = event;\n//   const formData = new FormData(currentTarget);\n//   onSubmit({\n//     email: formData.get('email'),\n//     password: formData.get('password')\n//   });\n }\n  render(){\n    return(\n      <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-4 offset-md-4\">\n        <div id=\"formContent\">\n          <form onSubmit={this._handleSubmit}>\n            <div class=\"form-group\">\n              FirstName\n              <input type=\"text\" id=\"firstName\" className=\"form-control txt\" name=\"firstName\" placeholder=\"First name\" ref={node => {this.inputNode1 = node}} />\n            </div>\n            <div class=\"form-group\">\n              LastName\n              <input type=\"text\" id=\"lastName\" className=\"form-control txt\" name=\"lastName\" placeholder=\"Last name\" ref={node => {this.inputNode2 = node}} />\n            </div>\n            <div class=\"form-group\">\n              Email\n              <input type=\"text\" id=\"login\" className=\"form-control txt\" name=\"email\" placeholder=\"Email\" ref={node => {this.inputNode3 = node}} />\n            </div>\n            <div class=\"form-group\">\n              Password\n              <input type=\"password\" id=\"password\" className=\"form-control txt\" name=\"password\" placeholder=\"password\" ref={node => {this.inputNode4 = node}} />\n            </div>\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Log In\" />\n          </form>\n\n        </div>\n        </div>\n      </div>\n\n      </div>\n\n    );\n  }\n}\nexport default Signup;\n","import React, {Component} from 'react';\n\nexport default class ConfirmOrder extends Component{\n  render(){\n    return(\n      <div>Order Confirmation{this.props.match.params.order}</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Footer.css'\nimport { Link } from 'react-router-dom';\n\nexport default class Footer extends Component{\n  render(){\n    return(\n      <footer className=\"footer-distributed\" id=\"footer\">\n\n\t\t\t<div className=\"footer-left\">\n\n\t\t\t\t<h3 className=\"logo\">Foodie</h3>\n\n\t\t\t\t<p className=\"footer-links\">\n\t\t\t\t\t<Link to='/home' >Home</Link>\n\t\t\t\t\t·\n\t\t\t\t\t<a href=\"#\">About</a>\n\t\t\t\t\t·\n\t\t\t\t\t<a href=\"#\">Contact</a>\n\t\t\t\t</p>\n\n\t\t\t\t<p className=\"footer-company-name\">Foodie &copy; 2015</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"footer-center\">\n\n\t\t\t\t<div>\n\t\t\t\t\t<i class=\"fa fa-map-marker\"></i>\n\t\t\t\t\t<p><span>21 Revolution Street</span> Paris, France</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<i class=\"fa fa-phone\"></i>\n\t\t\t\t\t<p>+1 555 123456</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<i class=\"fa fa-envelope\"></i>\n\t\t\t\t\t<p><a href=\"mailto:support@company.com\">support@company.com</a></p>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div className=\"footer-right\">\n\n\t\t\t\t<p className=\"footer-company-about\">\n\t\t\t\t\t<span>About the company</span>\n          Established since 2008, we take most care to deliver happiness at your door steps.\n\t\t\t\t</p>\n\n\t\t\t\t<div className=\"footer-icons\">\n\n\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-facebook\"></i></a>\n\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\n\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-linkedin\"></i></a>\n\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-github\"></i></a>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t</footer>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport $ from 'jquery';\nlet total = 0;\nlet index = 0;\nconst userid = window.localStorage.getItem('userid');\nconst SERVER_URL = \"https://foodserverapp.herokuapp.com/api/\";\n// const SERVER_URL = \"http://localhost:5000/api/\";\n\nexport default class Home extends Component{\n  constructor(){\n    super();\n    this.state = {\n      // orderdetails:{},\n      order:[],\n      dishes:[],\n      orderList:[]\n  };\n    const fetchOrderDetails = () => {\n      fetch(SERVER_URL+\"myorders?id=\"+userid)\n      .then(res => res.json())\n      .then(res => {\n        var orderList = [res];\n        var orderarray = [];\n        var stateOrder = [];\n        var statedishes = [];\n\n        // console.log(orderList[0]);\n        $.each(orderList[0],(key,value) => {\n          orderarray.push(value);\n          // console.log(orderarray);\n\n          fetch(SERVER_URL+\"orderdetails?id=\"+value)\n          .then(res => res.json())\n          .then(res =>\n                      {\n                        var resArray = [res];\n                        // var stateOrder = [];\n                        // console.log(resArray[0].name);\n                        // this.setState({orderdetails:res});\n\n                        $.each(resArray,(key,value) => {\n                          // console.log(value);\n                          var orderid=\"\";\n                          var cost=[];\n\n                          $.each(value,(key1,value1) => {\n\n                            if(key1 === \"order\"){\n                              $.each(value1,(key2,value2) => {\n                                orderid = value2._id;\n                                cost=value2.cost;\n                              var order = {\n                                _id: value2._id,\n                                cost:value2.cost,\n                                order_no: value2.order_no,\n                                deliverycost:value2.deliverycost,\n                                deliveryaddress:value2.deliveryaddress,\n                                name:resArray[0].name,\n                                description:resArray[0].description,\n                                Address:resArray[0].Address\n                              }\n                              stateOrder.push(order);\n                              this.setState({ order: [...stateOrder] });\n                            });\n                          }\n                          if(key1 === \"dishes\"){\n                            $.each(value1,(key2,value2) => {\n                              console.log(cost);\n\n                            var dish = {\n                              orderid:orderid,\n                              _id: value2._id,\n                              title:value2.title,\n                              description: value2.description,\n                              cost:cost[key2],\n                            }\n                            statedishes.push(dish);\n\n                            this.setState({ dishes: [...statedishes] });\n                          });\n                          }\n                          });\n                        });\n                        // console.log(stateOrder);\n                      });\n        });\n        // console.log(stateOrder);\n\n        this.setState({orderList:orderarray});\n\n      });\n      // fetch(\"http://localhost:5000/api/orderdetails?id=5c7e07be466c802fad42f028\")\n      // .then(res => res.json())\n      // .then(res =>\n      //             {\n      //               var resArray = [res];\n      //               var stateOrder = [];\n      //               var statedishes = [];\n      //\n      //               this.setState({orderdetails:res});\n      //               $.each(resArray,(key,value) => {\n      //\n      //                 $.each(value,(key1,value1) => {\n      //                   if(key1 === \"order\"){\n      //                     $.each(value1,(key2,value2) => {\n      //\n      //                     var order = {\n      //                       _id: value2._id,\n      //                       cost:value2.cost,\n      //                       order_no: value2.order_no,\n      //                       deliverycost:value2.deliverycost,\n      //                       deliveryaddress:value2.deliveryaddress\n      //                     }\n      //                     stateOrder.push(order);\n      //\n      //                     this.setState({ order: [...stateOrder] });\n      //\n      //\n      //                   });\n      //                 }\n      //                 if(key1 === \"dishes\"){\n      //                   $.each(value1,(key2,value2) => {\n      //                     console.log(value2)\n      //\n      //                   var dish = {\n      //                     _id: value2._id,\n      //                     title:value2.title,\n      //                     description: value2.description,\n      //                     cost:value2.cost,\n      //                   }\n      //                   statedishes.push(dish);\n      //\n      //                   this.setState({ dishes: [...statedishes] });\n      //                 });\n      //                 }\n      //                 });\n      //               });\n      //             });\n    };\n    fetchOrderDetails();\n\n  }\n\n  render(){\n    return(\n      <div className=\"container\">\n      <div id=\"myorder\" className=\"content-wrap\">\n      {this.state.orderList.map( (list) => (\n\n        <div>\n        {this.state.order.map( (order) => (\n          <div>\n          <p className=\"var\">{ total = 0 }</p>\n\n          {list === order._id ?\n            <div>\n            <h5>{order.name}</h5>\n\n              <p className=\"w400\">{order.description}</p>\n              <p className=\"w400\">{order.Address}</p>\n              <p>Order No :{order.order_no}</p>\n              <p className=\"w400\">Delivery Address :{order.deliveryaddress}</p>\n\n                <div className=\"row\">\n\n                <div className=\"col-md-2\">\n                  <h6>Items:</h6>\n\n                </div>\n                <div className=\"col-md-2\">\n                  <h6>Cost:</h6>\n\n                </div>\n                </div>\n                {this.state.dishes.map( (dish) => (\n                  <div>\n                  {list === dish.orderid ?\n                  <div className=\"row\">\n\n                  <div className=\"col-md-2\">\n\n                    <p>{dish.title}</p>\n                  </div>\n                  <div className=\"col-md-2\">\n\n                    <p>{`$${dish.cost}`}</p>\n\n                    <p className=\"var\">{ total += dish.cost }</p>\n                  </div>\n                  </div>\n                  : null }\n                  </div>\n                ))}\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                      <p>Delivery Charges</p>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <p>{'$' + order.deliverycost}</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-2\">\n                    <p>Total Charges</p>\n                  </div>\n                  <div className=\"col-md-2\">\n                    <p>{'$' + (Number(order.deliverycost) + Number(total))}</p>\n                  </div>\n                </div>\n                </div> : null}\n          </div>\n\n          ))}\n        </div>\n      ))}\n      </div>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport RestaurantInfo from './components/RestaurantInfo';\nimport ConfirmOrder from './components/ConfirmOrder';\nimport Footer from './components/Footer';\nimport MyOrders from './components/MyOrders';\n\n\nconst Routes = (\n  <Router>\n    <div id=\"page-container\">\n    <Nav />\n      <Route exact path=\"/home\" component={ Home } />\n      <Route exact path=\"/login\" component={ Login } />\n      <Route exact path=\"/signup\" component={ Signup } />\n      <Route path=\"/restaurantinfo/:restaurant\" component={ RestaurantInfo } />\n      <Route path=\"/confirmorder/:order\" component={ ConfirmOrder } />\n      <Route path=\"/myorders\" component={ MyOrders } />\n\n      <Footer />\n\n\n    </div>\n  </Router>\n\n);\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nimport Routes from './Routes';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(Routes, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}